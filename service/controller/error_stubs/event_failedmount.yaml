# slack secret doesn't exists
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-saver-operator
  labels:
    app: kube-saver-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-saver-operator
  template:
    metadata:
      labels:
        app: kube-saver-operator
    spec:
      containers:
        - name: kube-saver-operator
          image: maheshrayas/kube-saver:v1.8.0
          args:
            - "--rules=/config/rules.yaml" #rules for downscale
            - "--interval=60" # every 60 secs, the controller will check the resources to downscale or upscale
            - "--debug" # remove to set log as INFO
            - "--comm-type=slack" # notification type is slack, pass this arg if you want notified to slack
            - "--comm-details=maheshrayas" # slack workspace name, pass this arg if comm-type is set to slack
          resources:
            limits:
              cpu: "1"
              memory: 500Mi
            requests:
              cpu: "0.5"
              memory: 100Mi
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false # Create tmp file for slack notification
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config-volume
              mountPath: /config
            - name: slack-api-token
              mountPath: "/var/slack_token"
              readOnly: true
            - mountPath: /tmp
              name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: config-volume
          configMap:
            name: rules
        - name: slack-api-token
          secret:
            secretName: slack-token
            optional: false # default setting; "slack-token" must exist
---
# slack secret doesn't exists
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-saver-operator-2
  labels:
    app: kube-saver-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-saver-operator
  template:
    metadata:
      labels:
        app: kube-saver-operator
    spec:
      containers:
        - name: kube-saver-operator
          image: maheshrayas/kube-saver:v1.8.0
          args:
            - "--rules=/config/rules.yaml" #rules for downscale
            - "--interval=60" # every 60 secs, the controller will check the resources to downscale or upscale
            - "--debug" # remove to set log as INFO
            - "--comm-type=slack" # notification type is slack, pass this arg if you want notified to slack
            - "--comm-details=maheshrayas" # slack workspace name, pass this arg if comm-type is set to slack
          resources:
            limits:
              cpu: "1"
              memory: 500Mi
            requests:
              cpu: "0.5"
              memory: 100Mi
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false # Create tmp file for slack notification
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config-volume
              mountPath: /config
            - name: slack-api-token
              mountPath: "/var/slack_token"
              readOnly: true
            - mountPath: /tmp
              name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: config-volume
          configMap:
            name: rules
        - name: slack-api-token
          secret:
            secretName: slack-token
            optional: false # default setting; "slack-token" must exist
---
# slack secret doesn't exists
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-saver-operator-3
  labels:
    app: kube-saver-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-saver-operator
  template:
    metadata:
      labels:
        app: kube-saver-operator
    spec:
      containers:
        - name: kube-saver-operator
          image: maheshrayas/kube-saver:v1.8.0
          args:
            - "--rules=/config/rules.yaml" #rules for downscale
            - "--interval=60" # every 60 secs, the controller will check the resources to downscale or upscale
            - "--debug" # remove to set log as INFO
            - "--comm-type=slack" # notification type is slack, pass this arg if you want notified to slack
            - "--comm-details=maheshrayas" # slack workspace name, pass this arg if comm-type is set to slack
          resources:
            limits:
              cpu: "1"
              memory: 500Mi
            requests:
              cpu: "0.5"
              memory: 100Mi
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false # Create tmp file for slack notification
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config-volume
              mountPath: /config
            - name: slack-api-token
              mountPath: "/var/slack_token"
              readOnly: true
            - mountPath: /tmp
              name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: config-volume
          configMap:
            name: rules
        - name: slack-api-token
          secret:
            secretName: slack-token
            optional: false # default setting; "slack-token" must exist
